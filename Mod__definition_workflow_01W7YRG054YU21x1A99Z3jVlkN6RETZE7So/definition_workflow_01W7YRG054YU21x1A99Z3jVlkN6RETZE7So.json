{
  "workflow": {
    "unique_name": "definition_workflow_01W7YRG054YU21x1A99Z3jVlkN6RETZE7So",
    "name": "Mod v2",
    "title": "Mod v2",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "local",
          "name": "return",
          "type": "datatype.integer",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01W7YRG0WE9184EnGYO0ytBw3EpyZ62gS6j",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "input",
          "name": "Dividend",
          "type": "datatype.integer",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01W7YRG0WEX6L2912RoVNuQmkvtVbJXrxPE",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "output",
          "name": "IsDiv",
          "type": "datatype.boolean",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01W7YRG0WEMGT7MkuU2IYVABNjdvko9e7JP",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "input",
          "name": "Divisor",
          "type": "datatype.integer",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01W7YRG0WF65D0EqvjgWABQ0MZfrDEmZs0l",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "atomic_group": "Atomic",
        "is_atomic": true
      },
      "delete_workflow_instance": false,
      "description": "Workflow input of Dividend and Divisor \nIf divisible the atomic returns true if not returns false\n\nv2 - Error checking for Zero Added 4/8/22",
      "display_name": "Mod v2",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "no_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01W7YRVFQFO4C26uTykMaZKN6LPTONB3Ncy",
        "name": "Condition Block",
        "title": "Is Divisor Zero?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Is Divisor Zero?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01W7YRVGM8BMZ2KF39OU0qogZgSbzVqMxOm",
            "name": "Condition Branch",
            "title": "Yes",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01W7YRG054YU21x1A99Z3jVlkN6RETZE7So.input.variable_workflow_01W7YRG0WF65D0EqvjgWABQ0MZfrDEmZs0l$",
                "operator": "eq",
                "right_operand": 0
              },
              "continue_on_failure": false,
              "display_name": "Yes",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01W7YRWH6WWJS0yP1tN9av0baCyEAR1XGLg",
                "name": "Completed",
                "title": "Exit With Error",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Exit With Error",
                  "result_message": "Cannot divide by Zero",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01W7YRVHQTBZ33tXECjxxVdpagHzLjgQ7NY",
            "name": "Condition Branch",
            "title": "No",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01W7YRG054YU21x1A99Z3jVlkN6RETZE7So.input.variable_workflow_01W7YRG0WF65D0EqvjgWABQ0MZfrDEmZs0l$",
                "operator": "ne",
                "right_operand": 0
              },
              "continue_on_failure": false,
              "display_name": "No",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01W7YRG9FOLIA4sePqUOLmcfhvUEe0o3gQ8",
                "name": "Execute Python Script",
                "title": "Execute Python Script",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Execute Python Script",
                  "script": "import math,sys,json\ndividend=int(sys.argv[1])\ndivisor=int(sys.argv[2])\njson_object = {}\njson_object['ret']=math.fmod(dividend,divisor)\njson_out = json.dumps(json_object)",
                  "script_arguments": [
                    "$workflow.definition_workflow_01W7YRG054YU21x1A99Z3jVlkN6RETZE7So.input.variable_workflow_01W7YRG0WEX6L2912RoVNuQmkvtVbJXrxPE$",
                    "$workflow.definition_workflow_01W7YRG054YU21x1A99Z3jVlkN6RETZE7So.input.variable_workflow_01W7YRG0WF65D0EqvjgWABQ0MZfrDEmZs0l$"
                  ],
                  "script_queries": [
                    {
                      "script_query": "json_out",
                      "script_query_name": "json_out",
                      "script_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01W7YRGDNELJU2oLNvhokMZgtA4yzjrry0A",
                "name": "JSONPath Query",
                "title": "JSONPath Query",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "JSONPath Query",
                  "input_json": "$activity.definition_activity_01W7YRG9FOLIA4sePqUOLmcfhvUEe0o3gQ8.output.script_queries.json_out$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.ret",
                      "jsonpath_query_name": "return",
                      "jsonpath_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01W7YRGHT1NKU2KURGSQmzpvqOBJkr34M7Y",
                "name": "Condition Block",
                "title": "Is Dividend",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Is Dividend",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01W7YRGL7XK9T4GZfJh4ZKIBroQGYH4OWfV",
                    "name": "Condition Branch",
                    "title": "Is Dividend",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01W7YRGDNELJU2oLNvhokMZgtA4yzjrry0A.output.jsonpath_queries.return$",
                        "operator": "eq",
                        "right_operand": "0.0"
                      },
                      "continue_on_failure": false,
                      "display_name": "Is Dividend",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01W7YRGPC67ER5WWrv2tSCGDxw7seuAVThv",
                        "name": "Set Variables",
                        "title": "Set IsDiv True",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set IsDiv True",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01W7YRG054YU21x1A99Z3jVlkN6RETZE7So.output.variable_workflow_01W7YRG0WEMGT7MkuU2IYVABNjdvko9e7JP$",
                              "variable_value_new": true
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_01W7YRGU82J5B15XNkmVcCeGb1KDyJYi0Mv",
                    "name": "Condition Branch",
                    "title": "Is Not Dividend",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01W7YRGDNELJU2oLNvhokMZgtA4yzjrry0A.output.jsonpath_queries.return$",
                        "operator": "eq",
                        "right_operand": "1.0"
                      },
                      "continue_on_failure": false,
                      "display_name": "Is Not Dividend",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01W7YRGXIETYI0CkRmFWG2Jew8m8u2iMH8O",
                        "name": "Set Variables",
                        "title": "Set IsDiv False",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set IsDiv False",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01W7YRG054YU21x1A99Z3jVlkN6RETZE7So.output.variable_workflow_01W7YRG0WEMGT7MkuU2IYVABNjdvko9e7JP$",
                              "variable_value_new": false
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_01W6DOT54NZ0Z5pxlidwz1UnsILFrDp4sJl"
    ]
  },
  "categories": {
    "category_01W6DOT54NZ0Z5pxlidwz1UnsILFrDp4sJl": {
      "unique_name": "category_01W6DOT54NZ0Z5pxlidwz1UnsILFrDp4sJl",
      "name": "Math Function",
      "title": "Math Function",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    }
  }
}